(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{165:function(e,t,n){e.exports=n(339)},170:function(e,t,n){},174:function(e,t,n){},283:function(e,t,n){},332:function(e,t,n){e.exports=n.p+"static/media/index.d41d8cd9.less"},335:function(e,t,n){},339:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(9),o=n.n(i),c=(n(170),n(36)),s=n(37),l=n(40),u=n(38),m=n(41),p=n(3),g=n(48),d=n(111),S=n(146),E=n(84),b=n(147),v=["CREATE_TIME","CREATE_USER","LAST_MODIFIED","LAST_MODIFY_USER","TS","DR"],M=function(e){var t=e.tableSchema,n=e.packageName,a=e.projectName,r=e.tableName,i="",o=(p.upperFirst(p.camelCase(r)),p.upperFirst(p.camelCase(a))),c=b().format("YYYY/MM/DD  HH:mm:ss");return i+="\n \n       package ".concat(p.toLower(n),".").concat(p.toLower(a),".controller;\n\n      import java.util.ArrayList;\n      import java.util.Date;\n      import java.util.HashMap;\n      import java.util.List;\n      import java.util.Map;\n\n      import javax.servlet.http.HttpServletRequest;\n      import javax.servlet.http.HttpServletResponse;\n\n      import org.apache.commons.lang3.StringUtils;\n      import org.slf4j.Logger;\n      import org.slf4j.LoggerFactory;\n      import org.springframework.beans.factory.annotation.Autowired;\n      import org.springframework.data.domain.Page;\n      import org.springframework.data.domain.PageRequest;\n      import org.springframework.stereotype.Controller;\n      import org.springframework.web.bind.annotation.RequestBody;\n      import org.springframework.web.bind.annotation.RequestMapping;\n      import org.springframework.web.bind.annotation.RequestMethod;\n      import org.springframework.web.bind.annotation.RequestParam;\n      import org.springframework.web.bind.annotation.ResponseBody;\n      import org.springframework.web.multipart.MultipartFile;\n\n      import com.yonyou.iuap.CSRFToken;\n      import ").concat(p.toLower(n),".").concat(p.toLower(a),".entity.").concat(o,"; \n      import ").concat(p.toLower(n),".").concat(p.toLower(a),".service.").concat(o,"Service;\n      import com.yonyou.iuap.base.web.BaseController;\n      import com.yonyou.iuap.baseservice.statistics.service.StatCommonService;\n      import com.yonyou.iuap.common.utils.ExcelExportImportor;\n      import com.yonyou.iuap.context.InvocationInfoProxy;\n      import com.yonyou.iuap.mvc.constants.RequestStatusEnum;\n      import com.yonyou.iuap.mvc.type.SearchParams;\n      import com.yonyou.iuap.i18n.MessageSourceUtil;\n      import com.yonyou.iuap.i18n.MethodUtils;\n\n      import cn.hutool.core.date.DateUtil;\n      import jline.internal.Log;\n\n      /**\n       * \u8aaa\u660e\uff1a").concat(o," \u57fa\u790eController\u2014\u2014\u63d0\u4f9b\u6578\u64da\u589e\u3001\u522a\u3001\u6539\u3001\u67e5\u3001\u5c0e\u5165\u5c0e\u51fa\u7b49rest\u63a5\u53e3\n       * \n       * @date ").concat(c,'\n       */\n      @Controller\n      @RequestMapping(value = "/').concat(p.toLower(a),'")\n      public class ').concat(o,"Controller extends BaseController {\n        private Logger logger = LoggerFactory.getLogger(").concat(o,'Controller.class);\n        //\u591a\u8a9e\u5e38\u91cf\n        private static final String KEY1 = "ja.all.con1.0001";\n          private static final String MSG1 = "\u67e5\u8a62\u6578\u64da\u7570\u5e38\uff01";\n          private static final String KEY2 = "ja.all.con1.0002";\n          private static final String MSG2 = "\u65b0\u589e\u6578\u64da\u7570\u5e38\uff01";\n          private static final String KEY3 = "ja.all.con1.0003";\n          private static final String MSG3 = "\u4fee\u6539\u6578\u64da\u7570\u5e38\uff01";\n          private static final String KEY4 = "ja.all.con1.0004";\n          private static final String MSG4 = "\u522a\u9664\u6578\u64da\u7570\u5e38\uff01";\n          private static final String KEY5 = "ja.all.con1.0005";\n          private static final String MSG5 = "Excel\u6a21\u677f\u4e0b\u8f09\u5931\u6557\uff01";\n          private static final String KEY6 = "ja.all.con1.0006";\n          private static final String MSG6 = "Excel\u6a21\u677f\u4e0b\u8f09\u6210\u529f\uff01";\n          private static final String KEY7 = "ja.all.con1.0007";\n          private static final String MSG7 = "\u5c0e\u5165\u6587\u4ef6\u683c\u5f0f\u7570\u5e38\uff01";\n          private static final String KEY8 = "ja.all.con1.0008";\n          private static final String MSG8 = "\u5c0e\u5165\u6578\u64da\u7570\u5e38\uff01";\n          private static final String KEY9 = "ja.all.con1.0009";\n          private static final String MSG9 = "Excel\u5c0e\u5165\u5931\u6557\uff01";\n          private static final String KEY10 = "ja.all.con1.0010";\n          private static final String MSG10 = "Excel\u5c0e\u5165\u6210\u529f\uff01";\n          private static final String NAME = "name";\n          private static final String KEY = "ja.all.con.00001";\n          private static final String MESSAGE = "\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\uff01";\n          \n        \n        private ').concat(o,"Service ").concat(p.camelCase(a),"Service;\n\n        @Autowired\n        public void set").concat(o,"Service(").concat(o,"Service ").concat(p.camelCase(a),"Service) {\n          this.").concat(p.camelCase(a),"Service = ").concat(p.camelCase(a),"Service;\n        }\n        \n        @Autowired\n        private StatCommonService statCommonService;\n        \n        private static final String MODELCODE = ").concat(o,'.class.getSimpleName();\n        private static final String DATEFORMAT = "yyyy-MM-dd HH:mm:ss";\n        \n        /**\n         * \u6279\u91cf\u65b0\u589e\n         * @param listData\n         * @return\n         */\n        @CSRFToken\n        @RequestMapping(value = "/saveMultiple", method = RequestMethod.POST)\n        @ResponseBody\n        public Object saveMultiple(@RequestBody List<').concat(o,"> listData) {\n          try {\n            /*\n            for (").concat(o,' model : listData) { \n                    // \u570b\u969b\u5316 \u7576\u524d\u8a9e\u7a2e \n                    String localeSerial= InvocationInfoProxy.getParameter("locale_serial");\n                    String loacleName = MethodUtils.getDataBySerial(model, NAME,localeSerial);\n                    if (StringUtils.isBlank(loacleName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n                    // \u570b\u969b\u5316 \u9a57\u8b49\u9ed8\u8a8d\u8a9e\u7a2e \n                    String defaultSerial= InvocationInfoProxy.getParameter("default_serial");\n                    String defaultName = MethodUtils.getDataBySerial(model, NAME,defaultSerial);\n                    if (StringUtils.isBlank(defaultName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n                    // \u570b\u969b\u5316 \u9a57\u8b49\u7c21\u9ad4\u4e2d\u6587 \n                    String simpleChineseName = MethodUtils.getDataBySerial(model, NAME,"");\n                    if (StringUtils.isBlank(simpleChineseName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n            }\n            */\n           \n            this.').concat(p.camelCase(a),'Service.saveMultiple(listData);\n            return this.buildSuccess();\n          } catch (Exception exp) {\n            logger.error(MessageSourceUtil.getMessage(KEY2, MSG2), exp);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY2, MSG2), RequestStatusEnum.FAIL_FIELD);\n          }\n          \n        }\n        /**\n         * \u6279\u91cf\u4fee\u6539\n         * @param listData\n         * @return\n         */\n        @CSRFToken\n        @RequestMapping(value = "/updateMultiple", method = RequestMethod.POST)\n        @ResponseBody\n        public Object updateMultiple(@RequestBody List<').concat(o,"> listData) {\n          try {\n            /*\n            for (").concat(o,' model : listData) {\n                    // \u570b\u969b\u5316 \u7576\u524d\u8a9e\u7a2e\n                    String localeSerial= InvocationInfoProxy.getParameter("locale_serial");\n                    String loacleName = MethodUtils.getDataBySerial(model, NAME,localeSerial);\n                    if (StringUtils.isBlank(loacleName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n                    // \u570b\u969b\u5316 \u9a57\u8b49\u9ed8\u8a8d\u8a9e\u7a2e\n                    String defaultSerial= InvocationInfoProxy.getParameter("default_serial");\n                    String defaultName = MethodUtils.getDataBySerial(model, NAME,defaultSerial);\n                    if (StringUtils.isBlank(defaultName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n                    // \u570b\u969b\u5316 \u9a57\u8b49\u7c21\u9ad4\u4e2d\u6587\n                    String simpleChineseName = MethodUtils.getDataBySerial(model, NAME,"");\n                    if (StringUtils.isBlank(simpleChineseName)) {\n                      return this.buildError("msg", MessageSourceUtil.getMessage(KEY, MESSAGE), RequestStatusEnum.FAIL_FIELD);\n                    }\n            }\n            */\n            this.').concat(p.camelCase(a),'Service.updateMultiple(listData);\n            return this.buildSuccess();\n          } catch (Exception exp) {\n            logger.error(MessageSourceUtil.getMessage(KEY3, MSG3), exp);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY3, MSG3), RequestStatusEnum.FAIL_FIELD);\n          }\n          \n        }\n          \n        /**\n         * \u522a\u9664\n         * @param listData\n         * @param request\n         * @param response\n         * @return\n         * @throws Exception\n         */\n        @CSRFToken\n        @RequestMapping(value = "/deleteBatch", method = RequestMethod.POST)\n        @ResponseBody\n        public Object deleteBatch(@RequestBody List<').concat(o,"> listData, HttpServletRequest request,\n            HttpServletResponse response){\n          try {\n            this.").concat(p.camelCase(a),'Service.deleteBatch(listData);\n            return super.buildSuccess();\n          } catch (Exception exp) {\n            logger.error(MessageSourceUtil.getMessage(KEY4, MSG4), exp);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY4, MSG4), RequestStatusEnum.FAIL_FIELD);\n          }\n          \n        }\n        /**\n         * \u4e0b\u8f09\u6a21\u677f\n         * @param request\n         * @param response\n         * @return\n         */\n        @RequestMapping(value = "/excelTemplateDownload", method = { RequestMethod.GET })\n        @ResponseBody\n        public Object excelTemplateDownload(HttpServletRequest request, HttpServletResponse response) {\n          String name = "').concat(o,'";\n          try {\n            ExcelExportImportor.downloadExcelTemplate(response, getImportHeadInfo(), name, name);\n          } catch (Exception e) {\n            logger.error(MessageSourceUtil.getMessage(KEY5, MSG5), e);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY5, MSG5), RequestStatusEnum.FAIL_FIELD);\n          }\n          return super.buildSuccess(MessageSourceUtil.getMessage(KEY6, MSG6));\n        }\n        \n        private static Map<String, String> getImportHeadInfo() {\n          Map<String, String> importMap = new HashMap<>();\n      '),t.map(function(e,t){var n=p.get(e,"columnName"),a=t<10?"0"+t:t;i+='importMap.put("'.concat(n,'", MessageSourceUtil.getMessage("ja.all.entity1.000').concat(a,'", "XXXXX"));')}),i+='\n          return importMap;\n        }\n        /**\n         * \u5c0e\u5165excel\n         * @param request\n         * @param file\n         * @return\n         */\n        @RequestMapping(value = "/toImportExcel", method = RequestMethod.POST)\n        @ResponseBody\n        public Object importExcel(HttpServletRequest request,@RequestParam(value = "file", required = false) MultipartFile file) {\n          try {\n            List<'.concat(o,"> list = new ArrayList<").concat(o,'>();\n            String multName = file.getOriginalFilename().toString();\n            String multTypeName = multName.substring(multName.lastIndexOf(".") + 1, multName.length());\n            if (!"xlsx".equals(multTypeName)&& !"xls".equals(multTypeName)) {\n              Log.error(MessageSourceUtil.getMessage(KEY7, MSG7));\n              return this.buildError("msg", MessageSourceUtil.getMessage(KEY7, MSG7), RequestStatusEnum.FAIL_FIELD);\n            }\n            list = ExcelExportImportor.loadExcel(file.getInputStream(), getImportHeadInfo(),').concat(o,'.class);\n            if (list == null || list.size() == 0) {\n              Log.error(MessageSourceUtil.getMessage(KEY8, MSG8));\n              return this.buildError("msg", MessageSourceUtil.getMessage(KEY7, MSG7), RequestStatusEnum.FAIL_FIELD);\n            }\n            ').concat(p.camelCase(a),'Service.saveBatch(list);\n          } catch (Exception e) {\n            logger.error(MessageSourceUtil.getMessage(KEY9, MSG9), e);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY5, MSG5), RequestStatusEnum.FAIL_FIELD);\n          }\n          return super.buildSuccess(MessageSourceUtil.getMessage(KEY10, MSG10));\n        }\n        \n        /**\n         * \u591a\u904e\u6ffe \u591a\u6392\u5e8f\n         * @param pageRequest\n         * @param searchMap\n         * @return\n         */\n        @CSRFToken(verify = false)\n        @RequestMapping(value = "/list", method = RequestMethod.POST)\n        @ResponseBody\n        public Object list(PageRequest pageRequest, @RequestBody Map<String, Object> searchMap) {\n          try {\n            SearchParams searchParams = new SearchParams();\n            searchParams.setSearchMap(searchMap);\n              if (pageRequest.getPageSize() == 1) {\n              Integer allCount = Integer.MAX_VALUE-1;\n              pageRequest = new PageRequest(pageRequest.getPageNumber(), allCount, pageRequest.getSort());\n            }\n              Page<Map> page = this.statCommonService.selectFieldsByPage(pageRequest, searchParams, MODELCODE);\n              // ').concat(o,'EnumService.fillDynamicList( page.getContent());\n              return this.buildSuccess(page);\n          } catch (Exception exp) {\n            logger.error(MessageSourceUtil.getMessage(KEY1, MSG1), exp);\n            return this.buildError("msg", MessageSourceUtil.getMessage(KEY1, MSG1), RequestStatusEnum.FAIL_FIELD);\n          }\n        }\n      }\n\n\n\n\n         \n      '),g.js_beautify(i)},f=function(e){e.tableSchema;var t=e.packageName,n=e.projectName,a=e.tableName,r="";p.upperFirst(p.camelCase(a));return r+="\n      package ".concat(p.toLower(t),".").concat(p.toLower(n),".dao;\n      import ").concat(p.toLower(t),".").concat(p.toLower(n),".entity.").concat(p.upperFirst(p.camelCase(n)),";\n      import com.yonyou.iuap.baseservice.persistence.mybatis.mapper.GenericExMapper;\n      import com.yonyou.iuap.mybatis.anotation.MyBatisRepository;\n      @MyBatisRepository\n      public interface ").concat(p.upperFirst(p.camelCase(n)),"Mapper extends GenericExMapper<").concat(p.upperFirst(p.camelCase(n)),"> {\n  \n      }\n\n   "),g.js_beautify(r)},y=function(e){e.tableSchema;var t=e.packageName,n=e.projectName,a=e.tableName,r="",i=(p.upperFirst(p.camelCase(a)),p.upperFirst(p.camelCase(n)));return r+="  \n   package ".concat(p.toLower(t),".").concat(p.toLower(n),".service;\n\n\nimport static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.BPM;\nimport static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.LOGICAL_DEL;\nimport static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.MULTI_TENANT;\nimport static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.REFERENCE;\nimport static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.REMOTE_REFERENCE;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.yonyou.iuap.baseservice.intg.service.GenericIntegrateService;\nimport com.yonyou.iuap.baseservice.intg.support.ServiceFeature;\nimport com.yonyou.uap.busilog.annotation.LogConfig;\n\nimport cn.hutool.core.date.DateUtil;\n\n\nimport ").concat(p.toLower(t),".").concat(p.toLower(n),".dao.").concat(i,"Mapper;\nimport ").concat(p.toLower(t),".").concat(p.toLower(n),".entity.").concat(i,";\n\n/**\n * ").concat(i," CRUD \u6838\u5fc3\u670d\u52d9,\u63d0\u4f9b\u908f\u8f2f\u522a\u9664/\u6a02\u89c0\u9396\n */\n\n\n\n@Service\npublic class ").concat(i,"Service extends GenericIntegrateService<").concat(i,"> {\n\n  private ").concat(i,"Mapper ").concat(p.camelCase(n),"Mapper;\n\n  @Autowired\n  public void set").concat(i,"Mapper(").concat(i,"Mapper ").concat(p.camelCase(n),"Mapper) {\n    this.").concat(p.camelCase(n),"Mapper = ").concat(p.camelCase(n),"Mapper;\n    super.setGenericMapper(").concat(p.camelCase(n),'Mapper);\n  }\n\n  /**\n   * @CAU \u53ef\u63d2\u62d4\u8a2d\u8a08\n   * @return \u5411\u7236\u985e GenericIntegrateService \u63d0\u4f9b\u53ef\u63d2\u62d4\u7684\u7279\u6027\u8072\u660e\n   */\n  @Override\n  protected ServiceFeature[] getFeats() {\n    return new ServiceFeature[] { REFERENCE, BPM, MULTI_TENANT, LOGICAL_DEL,REMOTE_REFERENCE };\n  }\n  \n  private static final String DATEFORMAT = "yyyy-MM-dd HH:mm:ss";\n  \n  @Override\n  @LogConfig(busiCode = "').concat(p.camelCase(n),'_insertSelective", busiName = "').concat(p.camelCase(n),'", operation = "').concat(p.camelCase(n),'\u4fdd\u5b58", templateId = "').concat(p.camelCase(n),'_insertSelective")\n  public ').concat(i," insertSelective(").concat(i,' entity) { \n    return super.insertSelective(entity);\n  }\n\n  @Override\n  @LogConfig(busiCode = "').concat(p.camelCase(n),'_updateSelective", busiName = "').concat(p.camelCase(n),'", operation = "').concat(p.camelCase(n),'\u4fee\u6539", templateId = "').concat(p.camelCase(n),'_updateSelective")\n  public ').concat(i," updateSelective(").concat(i,' entity) {\n    return super.updateSelective(entity);\n\n  }\n  @LogConfig(busiCode = "').concat(p.camelCase(n),'_saveMultiple", busiName = "').concat(p.camelCase(n),'", operation = "').concat(p.camelCase(n),'\u6279\u91cf\u6dfb\u52a0", templateId = "').concat(p.camelCase(n),'_saveMultiple")\n  public void saveMultiple(List<').concat(i,'> listData) { \n    super.saveBatch(listData);\n  }\n  \n  @LogConfig(busiCode = "').concat(p.camelCase(n),'_updateMultiple", busiName = "').concat(p.camelCase(n),'", operation = "').concat(p.camelCase(n),'\u6279\u91cf\u4fee\u6539", templateId = "').concat(p.camelCase(n),'_updateMultiple")\n  public void updateMultiple(List<').concat(i,'> listData) {\n    super.saveBatch(listData);\n  }\n\n  @Override\n  @LogConfig(busiCode = "').concat(p.camelCase(n),'_deleteBatch", busiName = "').concat(p.camelCase(n),'", operation = "').concat(p.camelCase(n),'\u522a\u9664", templateId = "').concat(p.camelCase(n),'_deleteBatch")\n  public int deleteBatch(List<').concat(i,"> list) {\n    return super.deleteBatch(list);\n  }\n  \n}\n \n   "),g.js_beautify(r)},h=function(e){var t=e.tableSchema,n=e.packageName,a=e.projectName,r=e.tableName,i=(p.upperFirst(p.camelCase(r)),""),o="AbsDrModel",c="";return t.map(function(e){if(p.startsWith(e.columnName,"BPM"))return console.log("=== abs bpm mode ==="),void(o="AbsBpmModel")}),console.log("=== tableSchema ==="),console.log(t),t.map(function(e){1!=p.get(e,"at_CodingEntity")||(c='@CodingEntity(codingField = "'.concat(p.camelCase(e.columnName),'") '))}),i+="\n      package ".concat(p.toLower(n),".").concat(p.toLower(a),'.entity;\n\n      import java.io.Serializable;\n      import java.math.BigDecimal;\n\n      import javax.persistence.Column;\n      import javax.persistence.Id;\n      import javax.persistence.Table;\n      import javax.persistence.Transient;\n\n      import com.fasterxml.jackson.annotation.JsonIgnoreProperties; \n      import com.yonyou.iuap.baseservice.bpm.entity.AbsBpmModel;\n      import com.yonyou.iuap.baseservice.entity.annotation.CodingEntity;\n      import com.yonyou.iuap.baseservice.entity.annotation.CodingField;\n      import com.yonyou.iuap.baseservice.entity.annotation.Reference;\n      import com.yonyou.iuap.baseservice.multitenant.entity.MultiTenant;\n      import com.yonyou.iuap.baseservice.print.entity.Printable;\n      import com.yonyou.iuap.baseservice.statistics.support.StatFunctions;\n      import com.yonyou.iuap.baseservice.statistics.support.StatisticsField;\n      import com.yonyou.iuap.baseservice.support.condition.Condition;\n      import com.yonyou.iuap.baseservice.support.condition.Match;\n      import com.yonyou.iuap.baseservice.support.generator.GeneratedValue; \n\n\n      @JsonIgnoreProperties(ignoreUnknown = true)\n      @Table(name = "').concat(r,'") \n      ').concat(c,"\n      public class ").concat(p.upperFirst(p.camelCase(a))," extends ").concat(o," implements Serializable, MultiTenant{\n\n\n    "),t.map(function(e){v.includes(e.columnName)||(i+=C(e))}),i+='\n    \n        // \u5efa\u7acb\u8005,\u4f7f\u7528\u53c2\u7167\n        @Column(name = "create_user")\n        @Condition\n        @Reference(code = "wbUser", srcProperties = { "refname" }, desProperties = { "createUserName" })\n        private String createUser;\n\n        public String getCreateUser() {\n          return createUser;\n        }\n\n        public void setCreateUser(String createUser) {\n          this.createUser = createUser;\n        }\n        \n        \n        // \u5efa\u7acb\u8005 Name\n        @Transient\n        private String createUserName;\n        \n        public String getCreateUserName() {\n          return createUserName;\n        }\n\n        public void setCreateUserName(String createUserName) {\n          this.createUserName = createUserName;\n        }\n        \n        \n\n        // \u4fee\u6539\u8005,\u4f7f\u7528\u53c2\u7167\n        @Column(name = "last_modify_user")\n        @Condition\n        @Reference(code = "wbUser", srcProperties = { "refname" }, desProperties = { "lastModifyUserName" })\n        private String lastModifyUser;\n        \n        public String getLastModifyUser() {\n          return lastModifyUser;\n        }\n\n        public void setLastModifyUser(String lastModifyUser) {\n          this.lastModifyUser = lastModifyUser;\n        }\n        \n        \n        \n\n        // \u4fee\u6539\u8005 Name\n        @Transient\n        private String lastModifyUserName;\n        \n        public String getLastModifyUserName() {\n          return lastModifyUserName;\n        }\n\n        public void setLastModifyUserName(String lastModifyUserName) {\n          this.lastModifyUserName = lastModifyUserName;\n        }\n\n\n  ',i+="} ",g.js_beautify(i)},C=function(e){var t="";t+=e.at_Id?"@Id \n ":"",t+=e.at_GeneratedValue?"@GeneratedValue \n ":"",t+=e.at_Condition?"@Condition(match = Match.EQ) \n":"";var n=e.columnName,a=p.camelCase(n),r=p.upperFirst(p.camelCase(n)),i=e.type;return e.at_Id||"ID"==e.columnName?t+=" \n          @Id\n          @GeneratedValue\n          @Condition\n          @StatisticsField(functions = { StatFunctions.count })\n          protected String id; \n\n          @Override\n          public String getId() {\n          return id;\n          }\n\n          @Override\n          public void setId(Serializable id) {\n          this.id = id.toString();\n          super.id = id;\n          }\n\n          public void setId(String id) {\n          this.id = id;\n          }\n\n    ":"TENANT_ID"==e.columnName?t+='\n      \n        // TENANT ID\n        @Column(name = "TENANT_ID")\n        @Condition(match = Match.EQ)\n        private String tenantid;\n\n        public String getTenantid() {\n          return this.tenantid;\n        }\n\n        public void setTenantid(String tenantid) {\n          this.tenantid = tenantid;\n        }\n\n      ':"BPM_STATE"==e.columnName?t+='\n      \n      @Condition(match = Match.EQ)\n      @Column(name = "bpm_state")\n      private Integer bpmState;\n\n      public Integer getBpmState() {\n        return bpmState;\n      }\n\n      public void setBpmState(Integer bpmState) {\n        this.bpmState = bpmState;\n      }\n\n\n      @Override\n      public String getBpmBillCode() {\n        return getCode();\n      }\n\n      ':(t+='@Column(name = "'.concat(n,'") \n'),t+=e.at_CodingEntity?' @CodingField(code = "XXXXX") ':"",t+=e.at_Reference?' @Reference(code = "XXXXX", srcProperties = { "XXXXX" }, desProperties = { "XXXXX" }) ':"",t+="\n      private ".concat(i," ").concat(a,";  \n\n      public void set").concat(r,"(").concat(i," ").concat(a,") {\n        this.").concat(a," = ").concat(a,";\n      }\n\n      public ").concat(i," get").concat(r,"() {\n        return this.").concat(a,";\n      }\n\n    ")),t},N=function(e){var t=e.tableSchema,n=e.packageName,a=e.projectName,r=e.tableName,i=p.toLower(p.camelCase(a)),o=(p.upperFirst(p.camelCase(a)),p.upperFirst(p.camelCase(r)),new Map);o.set("String","VARCHAR"),o.set("Double","DECIMAL"),o.set("Integer","INTEGER"),o.set("Boolean","BOOLEAN");var c="";return c+='<?xml version="1.0" encoding="UTF-8" ?>\n        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >\n        <mapper namespace="'.concat(n,".").concat(i,".dao.").concat(p.upperFirst(p.camelCase(a)),'Mapper">\n\n        <resultMap id="BaseResultMap" type="').concat(n,".").concat(i,".entity.").concat(p.upperFirst(p.camelCase(a)),'">\n\n\n   '),t.map(function(e){"TENANT_ID"==e.columnName?c+='<result column="TENANT_ID" jdbcType="VARCHAR" property="tenantid" />':c+=' <result column="'.concat(e.columnName,'" jdbcType="').concat(o.get(e.type),'" property="').concat(p.camelCase(e.columnName),'" /> \n')}),c+="\n   </resultMap>\n  \n\n  ",c+='\n\n    \x3c!--  \n    <select id="selectAllByPage" resultMap="BaseResultMap">\n    SELECT t.* FROM '.concat(r,' t WHERE 1 =1 and t.dr=0\n      <if test="condition != null">\n\n    '),t.map(function(e){"TENANT_ID"==e.columnName?c+="   <if test=\"condition.searchMap.tenantid!=null and condition.searchMap.tenantid!='' \">\n        and t.TENANT_ID = #{condition.searchMap.tenantid}\n      </if> ":c+='\n      <if test="condition.searchMap.'.concat(p.camelCase(e.columnName),"!=null and condition.searchMap.").concat(p.camelCase(e.columnName),"!='' \">\n        and t.").concat(e.columnName," = #{condition.searchMap.").concat(p.camelCase(e.columnName),"}\n      </if>\n    ")}),c+='\n      </if>\n        order by ts desc\n        <if test="page != null">\n          <if test="page.sort!=null">\n            <foreach collection="page.sort" item="item" separator=" ">\n              ,${item.property} ${item.direction}\n            </foreach>\n          </if>\n        </if>\n      </select>\n      --\x3e\n    </mapper>\n  ',(new d).beautify(c,{indent:"  ",useSelfClosingElement:!0})},R=function(e){var t=p.toLower(e.packageName),n=p.upperFirst(p.camelCase(e.projectName)),a=e.tableName;a=p.replace(a,"[",""),a=p.replace(a,"]","");var r=e.tableSchema,i=new Map;i.set("VAR","String"),i.set("DEC","Double"),i.set("INT","Integer"),i.set("NVA","String"),i.set("CHA","String"),i.set("BIT","Boolean");var o=function(e){var t=p.split(e,"["),n=new RegExp("]");return t=p.filter(t,function(e){return n.test(e)}),t=p.map(t,function(e){return p.split(e,"]")[0]}),t=p.filter(t,function(e){return""!==e&&"\n"!==e})}(r);r=[];for(var c={at_Id:!1,at_Condition:!1,at_GeneratedValue:!1,at_CodingEntity:!1,at_Reference:!1},s=0;s<o.length;s+=2){var l={};l.columnName=o[s],l.type=i.get(p.replace(o[s+1],"TYPE_","").trim().substring(0,3))?i.get(p.replace(o[s+1],"TYPE_","").trim().substring(0,3)):"String",l.key=o[s],l=Object(E.a)({},l,c),r.push(l)}return{packageName:t,projectName:n,tableName:a,tableSchema:r}},I=n(342),L=n(145),j=n(341),F=(n(174),I.a.TextArea),T=(L.a.Option,function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleSubmit=function(e){e.preventDefault(),n.props.form.validateFields(function(e,t){e||(t.tableSchema=p.toUpper(t.tableSchema),n.props.setSettingConfig(t))})},n.hasErrors=function(e){return Object.keys(e).some(function(t){return e[t]})},n.state={},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this.props.form,t=e.getFieldDecorator,n=e.getFieldsError;e.getFieldError,e.isFieldTouched,this.state.hasError;return r.a.createElement("div",{className:"setting-area"},r.a.createElement(j.a,{layout:"vertical",onSubmit:this.handleSubmit},r.a.createElement(j.a.Item,{label:"# Table Name"},t("tableName",{rules:[{required:!0,message:"Please input your Table Name!"}]})(r.a.createElement(I.a,{placeholder:"table name"}))),r.a.createElement(j.a.Item,{label:"# Table Schema"},t("tableSchema",{rules:[{required:!0,message:"Please input your Table Schema!"}]})(r.a.createElement(F,{rows:10}))),r.a.createElement(j.a.Item,{label:"# Package Name"},t("packageName",{initialValue:"com.walsin.ytmes.mta",rules:[{required:!0,message:"Please input your Package Name!"}]})(r.a.createElement(I.a,{placeholder:"package name"}))),r.a.createElement(j.a.Item,{label:"# Project Name"},t("projectName",{rules:[{required:!0,message:"Please input your Project Name!"}]})(r.a.createElement(I.a,{placeholder:"project name"}))),r.a.createElement(j.a.Item,null,r.a.createElement(S.a,{type:"primary",htmlType:"submit",disabled:this.hasErrors(n())},"Submit"))))}}]),t}(a.Component)),U=j.a.create()(T),D=n(340),A=n(110),_=(n(283),A.a.Group),w=[{label:"@Id",value:"at_Id"},{label:"@GeneratedValue",value:"at_GeneratedValue"},{label:"@Condition",value:"at_Condition"},{label:"@CodingEntity",value:"at_CodingEntity"},{label:"@Reference",value:"at_Reference"}],k=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).onChange=function(e,t){var a=n.props.tableSchema,r={at_Id:!1,at_Condition:!1,at_GeneratedValue:!1,at_CodingEntity:!1,at_Reference:!1};t.map(function(e){r[e]=!0}),a[e]=Object(E.a)({},a[e],r)},n.updateAnnotationConfig=function(){var e=n.props.tableSchema;n.props.updateAnnotationConfig(e)},n.state={tableSchema:[],indeterminate:!0},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this,t=this.props.tableSchema,n=[{title:"Column Name",dataIndex:"columnName",key:"columnName"},{title:"Type",dataIndex:"type",key:"type"},,{title:"Annotation",key:"Annotation",render:function(t,n,a){return r.a.createElement(_,{options:w,onChange:e.onChange.bind(e,a)})}}];return r.a.createElement("div",{className:"annotation-table"},r.a.createElement("h1",{className:"text-gradient"},"@ Annotation"),r.a.createElement(D.a,{columns:n,dataSource:t,pagination:!1}),r.a.createElement(S.a,{type:"primary",onClick:this.updateAnnotationConfig},"Generate Entity & XML"))}}]),t}(a.Component),x=n(116),q=n(163),O=n.n(q),G=(n(332),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this.props,t=e.codeStr,n=e.lang;return r.a.createElement(x.a,Object.assign({},x.b,{theme:O.a,code:t,language:n}),function(e){var t=e.className,n=e.style,a=e.tokens,i=e.getLineProps,o=e.getTokenProps;return r.a.createElement("pre",{className:t,style:n},a.map(function(e,t){return r.a.createElement("div",i({line:e,key:t}),e.map(function(e,t){return r.a.createElement("span",o({token:e,key:t}))}))}))})}}]),t}(a.Component)),B=(n(333),n(335),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).setSettingConfig=function(e){var t=R(e),a=t.packageName,r=t.projectName,i=t.tableName,o=t.tableSchema,c=e.projectType;n.setState({packageName:a,projectName:r,tableName:i,tableSchema:o,projectType:c})},n.updateAnnotationConfig=function(e){n.setState({tableSchema:e},function(){var e=h(n.state),t=N(n.state),a=f(n.state),r=y(n.state),i=M(n.state);n.setState({formattedEntity:e,formattedXml:t,formattedDao:a,formattedServie:r,formattedController:i})})},n.state={packageName:"",projectName:"",projectType:"",tableName:"",tableSchema:[],formattedEntity:"",formattedDao:"",formattedServie:"",formattedController:"",formattedEnumServie:"",formattedXml:""},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this.state,t=(e.packageName,e.projectName,e.tableName,e.tableSchema),n=e.formattedEntity,a=e.formattedDao,i=e.formattedServie,o=e.formattedXml,c=e.formattedController;e.formattedEnumServie;return r.a.createElement("div",{className:"App"},r.a.createElement(S.a,{ghost:!0,icon:"github",className:"githubBtn"},r.a.createElement("a",{href:"https://github.com/openopen114/gen-entity-web",target:"_blank"}," Github")),r.a.createElement("h1",{className:"app-title"},"ENTITY & XML GENERATOR"),r.a.createElement(U,{setSettingConfig:this.setSettingConfig}),r.a.createElement(k,{tableSchema:t,updateAnnotationConfig:this.updateAnnotationConfig}),r.a.createElement("h1",{className:"result-title"},"Generate Entity Result"),r.a.createElement(G,{codeStr:n,lang:"java"}),r.a.createElement("h1",{className:"result-title"},"Generate Dao Result"),r.a.createElement(G,{codeStr:a,lang:"java"}),r.a.createElement("h1",{className:"result-title"},"Generate Service Result"),r.a.createElement(G,{codeStr:i,lang:"java"}),r.a.createElement("h1",{className:"result-title"},"Generate Controller Result"),r.a.createElement(G,{codeStr:c,lang:"java"}),r.a.createElement("h1",{className:"result-title"},"Generate XML Result"),r.a.createElement(G,{codeStr:o,lang:"xml"}))}}]),t}(a.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(B,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[165,2,1]]]);
//# sourceMappingURL=main.4cb6fe6e.chunk.js.map